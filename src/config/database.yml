# MySQL。バージョン 5.5.8 以降がサポートされています。
# MySQL ドライバーをインストールする
# gem install mysql2

# MySQL gem が Gemfile で定義されていることを確認します
# gem "mysql2"

# そして、必ず新しいスタイルのパスワードハッシュを使用してください:
# https://dev.mysql.com/doc/refman/5.7/en/password-hashing.html


default: &default
  adapter: mysql2
  encoding: utf8mb4
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  username: root
  password: password
  host: db

development:
  <<: *default
  database: app_development

# 警告: 「test」として定義されたデータベースは消去され、
# "rake" を実行すると、開発データベースから再生成されます。
# このデータベースを開発または本番と同じに設定しないでください。

test:
  <<: *default
  database: app_test
  host: <%= ENV.fetch("APP_DATABASE_HOST") { 'db' } %>

# config/credentials.yml と同様に、機密情報を保存したくありません。
# データベースのパスワードのように、ソース コードに。ソースコードが
# 誰もが見たことのある人は、あなたのデータベースにアクセスできるようになりました。
#
# 代わりに、パスワードまたは完全な接続 URL を環境として提供します
# アプリ起動時の変数。例えば：
# DATABASE_URL="mysql2://myuser:mypass@localhost/somedatabase"
#
# 特別な DATABASE_URL 環境で接続 URL を指定する場合
# 変数、Rails は自動的に設定値を上にマージします
# このファイルで提供される値。または、接続を指定することもできます
# URL 環境変数を明示的に:
#
# production:
# URL: <%= ENV["MY_APP_DATABASE_URL"] %>
#
# https://guides.rubyonrails.org/configuring.html#configuring-a-database を読む
# データベース接続構成を指定する方法の完全な概要については、.

production:
  <<: *default
  database: <%= ENV["APP_DATABASE"] %>
  username: <%= ENV["APP_DATABASE_USERNAME"] %>
  password: <%= ENV["APP_DATABASE_PASSWORD"] %>
  host: <%= ENV["APP_DATABASE_HOST"] %>
